// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: math_opt_benchmark/proto/model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015007 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ortools/math_opt/model.pb.h"
#include "ortools/math_opt/model_update.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto_metadata_getter(int index);
namespace math_opt_benchmark {
class BenchmarkInstance;
struct BenchmarkInstanceDefaultTypeInternal;
extern BenchmarkInstanceDefaultTypeInternal _BenchmarkInstance_default_instance_;
}  // namespace math_opt_benchmark
PROTOBUF_NAMESPACE_OPEN
template<> ::math_opt_benchmark::BenchmarkInstance* Arena::CreateMaybeMessage<::math_opt_benchmark::BenchmarkInstance>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace math_opt_benchmark {

// ===================================================================

class BenchmarkInstance PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:math_opt_benchmark.BenchmarkInstance) */ {
 public:
  inline BenchmarkInstance() : BenchmarkInstance(nullptr) {}
  virtual ~BenchmarkInstance();
  explicit constexpr BenchmarkInstance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BenchmarkInstance(const BenchmarkInstance& from);
  BenchmarkInstance(BenchmarkInstance&& from) noexcept
    : BenchmarkInstance() {
    *this = ::std::move(from);
  }

  inline BenchmarkInstance& operator=(const BenchmarkInstance& from) {
    CopyFrom(from);
    return *this;
  }
  inline BenchmarkInstance& operator=(BenchmarkInstance&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BenchmarkInstance& default_instance() {
    return *internal_default_instance();
  }
  static inline const BenchmarkInstance* internal_default_instance() {
    return reinterpret_cast<const BenchmarkInstance*>(
               &_BenchmarkInstance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BenchmarkInstance& a, BenchmarkInstance& b) {
    a.Swap(&b);
  }
  inline void Swap(BenchmarkInstance* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BenchmarkInstance* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BenchmarkInstance* New() const final {
    return CreateMaybeMessage<BenchmarkInstance>(nullptr);
  }

  BenchmarkInstance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BenchmarkInstance>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BenchmarkInstance& from);
  void MergeFrom(const BenchmarkInstance& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BenchmarkInstance* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "math_opt_benchmark.BenchmarkInstance";
  }
  protected:
  explicit BenchmarkInstance(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelUpdatesFieldNumber = 3,
    kUpdateObjectivesFieldNumber = 4,
    kInitialModelFieldNumber = 1,
    kInitObjectiveFieldNumber = 2,
  };
  // repeated .operations_research.math_opt.ModelUpdateProto model_updates = 3;
  int model_updates_size() const;
  private:
  int _internal_model_updates_size() const;
  public:
  void clear_model_updates();
  ::operations_research::math_opt::ModelUpdateProto* mutable_model_updates(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::ModelUpdateProto >*
      mutable_model_updates();
  private:
  const ::operations_research::math_opt::ModelUpdateProto& _internal_model_updates(int index) const;
  ::operations_research::math_opt::ModelUpdateProto* _internal_add_model_updates();
  public:
  const ::operations_research::math_opt::ModelUpdateProto& model_updates(int index) const;
  ::operations_research::math_opt::ModelUpdateProto* add_model_updates();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::ModelUpdateProto >&
      model_updates() const;

  // repeated double update_objectives = 4;
  int update_objectives_size() const;
  private:
  int _internal_update_objectives_size() const;
  public:
  void clear_update_objectives();
  private:
  double _internal_update_objectives(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_update_objectives() const;
  void _internal_add_update_objectives(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_update_objectives();
  public:
  double update_objectives(int index) const;
  void set_update_objectives(int index, double value);
  void add_update_objectives(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      update_objectives() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_update_objectives();

  // .operations_research.math_opt.ModelProto initial_model = 1;
  bool has_initial_model() const;
  private:
  bool _internal_has_initial_model() const;
  public:
  void clear_initial_model();
  const ::operations_research::math_opt::ModelProto& initial_model() const;
  ::operations_research::math_opt::ModelProto* release_initial_model();
  ::operations_research::math_opt::ModelProto* mutable_initial_model();
  void set_allocated_initial_model(::operations_research::math_opt::ModelProto* initial_model);
  private:
  const ::operations_research::math_opt::ModelProto& _internal_initial_model() const;
  ::operations_research::math_opt::ModelProto* _internal_mutable_initial_model();
  public:
  void unsafe_arena_set_allocated_initial_model(
      ::operations_research::math_opt::ModelProto* initial_model);
  ::operations_research::math_opt::ModelProto* unsafe_arena_release_initial_model();

  // double init_objective = 2;
  void clear_init_objective();
  double init_objective() const;
  void set_init_objective(double value);
  private:
  double _internal_init_objective() const;
  void _internal_set_init_objective(double value);
  public:

  // @@protoc_insertion_point(class_scope:math_opt_benchmark.BenchmarkInstance)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::ModelUpdateProto > model_updates_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > update_objectives_;
  mutable std::atomic<int> _update_objectives_cached_byte_size_;
  ::operations_research::math_opt::ModelProto* initial_model_;
  double init_objective_;
  friend struct ::TableStruct_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BenchmarkInstance

// .operations_research.math_opt.ModelProto initial_model = 1;
inline bool BenchmarkInstance::_internal_has_initial_model() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || initial_model_ != nullptr);
  return value;
}
inline bool BenchmarkInstance::has_initial_model() const {
  return _internal_has_initial_model();
}
inline const ::operations_research::math_opt::ModelProto& BenchmarkInstance::_internal_initial_model() const {
  const ::operations_research::math_opt::ModelProto* p = initial_model_;
  return p != nullptr ? *p : reinterpret_cast<const ::operations_research::math_opt::ModelProto&>(
      ::operations_research::math_opt::_ModelProto_default_instance_);
}
inline const ::operations_research::math_opt::ModelProto& BenchmarkInstance::initial_model() const {
  // @@protoc_insertion_point(field_get:math_opt_benchmark.BenchmarkInstance.initial_model)
  return _internal_initial_model();
}
inline void BenchmarkInstance::unsafe_arena_set_allocated_initial_model(
    ::operations_research::math_opt::ModelProto* initial_model) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(initial_model_);
  }
  initial_model_ = initial_model;
  if (initial_model) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:math_opt_benchmark.BenchmarkInstance.initial_model)
}
inline ::operations_research::math_opt::ModelProto* BenchmarkInstance::release_initial_model() {
  _has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::ModelProto* temp = initial_model_;
  initial_model_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::operations_research::math_opt::ModelProto* BenchmarkInstance::unsafe_arena_release_initial_model() {
  // @@protoc_insertion_point(field_release:math_opt_benchmark.BenchmarkInstance.initial_model)
  _has_bits_[0] &= ~0x00000001u;
  ::operations_research::math_opt::ModelProto* temp = initial_model_;
  initial_model_ = nullptr;
  return temp;
}
inline ::operations_research::math_opt::ModelProto* BenchmarkInstance::_internal_mutable_initial_model() {
  _has_bits_[0] |= 0x00000001u;
  if (initial_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::operations_research::math_opt::ModelProto>(GetArena());
    initial_model_ = p;
  }
  return initial_model_;
}
inline ::operations_research::math_opt::ModelProto* BenchmarkInstance::mutable_initial_model() {
  // @@protoc_insertion_point(field_mutable:math_opt_benchmark.BenchmarkInstance.initial_model)
  return _internal_mutable_initial_model();
}
inline void BenchmarkInstance::set_allocated_initial_model(::operations_research::math_opt::ModelProto* initial_model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(initial_model_);
  }
  if (initial_model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(initial_model)->GetArena();
    if (message_arena != submessage_arena) {
      initial_model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, initial_model, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  initial_model_ = initial_model;
  // @@protoc_insertion_point(field_set_allocated:math_opt_benchmark.BenchmarkInstance.initial_model)
}

// double init_objective = 2;
inline void BenchmarkInstance::clear_init_objective() {
  init_objective_ = 0;
}
inline double BenchmarkInstance::_internal_init_objective() const {
  return init_objective_;
}
inline double BenchmarkInstance::init_objective() const {
  // @@protoc_insertion_point(field_get:math_opt_benchmark.BenchmarkInstance.init_objective)
  return _internal_init_objective();
}
inline void BenchmarkInstance::_internal_set_init_objective(double value) {
  
  init_objective_ = value;
}
inline void BenchmarkInstance::set_init_objective(double value) {
  _internal_set_init_objective(value);
  // @@protoc_insertion_point(field_set:math_opt_benchmark.BenchmarkInstance.init_objective)
}

// repeated .operations_research.math_opt.ModelUpdateProto model_updates = 3;
inline int BenchmarkInstance::_internal_model_updates_size() const {
  return model_updates_.size();
}
inline int BenchmarkInstance::model_updates_size() const {
  return _internal_model_updates_size();
}
inline ::operations_research::math_opt::ModelUpdateProto* BenchmarkInstance::mutable_model_updates(int index) {
  // @@protoc_insertion_point(field_mutable:math_opt_benchmark.BenchmarkInstance.model_updates)
  return model_updates_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::ModelUpdateProto >*
BenchmarkInstance::mutable_model_updates() {
  // @@protoc_insertion_point(field_mutable_list:math_opt_benchmark.BenchmarkInstance.model_updates)
  return &model_updates_;
}
inline const ::operations_research::math_opt::ModelUpdateProto& BenchmarkInstance::_internal_model_updates(int index) const {
  return model_updates_.Get(index);
}
inline const ::operations_research::math_opt::ModelUpdateProto& BenchmarkInstance::model_updates(int index) const {
  // @@protoc_insertion_point(field_get:math_opt_benchmark.BenchmarkInstance.model_updates)
  return _internal_model_updates(index);
}
inline ::operations_research::math_opt::ModelUpdateProto* BenchmarkInstance::_internal_add_model_updates() {
  return model_updates_.Add();
}
inline ::operations_research::math_opt::ModelUpdateProto* BenchmarkInstance::add_model_updates() {
  // @@protoc_insertion_point(field_add:math_opt_benchmark.BenchmarkInstance.model_updates)
  return _internal_add_model_updates();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::operations_research::math_opt::ModelUpdateProto >&
BenchmarkInstance::model_updates() const {
  // @@protoc_insertion_point(field_list:math_opt_benchmark.BenchmarkInstance.model_updates)
  return model_updates_;
}

// repeated double update_objectives = 4;
inline int BenchmarkInstance::_internal_update_objectives_size() const {
  return update_objectives_.size();
}
inline int BenchmarkInstance::update_objectives_size() const {
  return _internal_update_objectives_size();
}
inline void BenchmarkInstance::clear_update_objectives() {
  update_objectives_.Clear();
}
inline double BenchmarkInstance::_internal_update_objectives(int index) const {
  return update_objectives_.Get(index);
}
inline double BenchmarkInstance::update_objectives(int index) const {
  // @@protoc_insertion_point(field_get:math_opt_benchmark.BenchmarkInstance.update_objectives)
  return _internal_update_objectives(index);
}
inline void BenchmarkInstance::set_update_objectives(int index, double value) {
  update_objectives_.Set(index, value);
  // @@protoc_insertion_point(field_set:math_opt_benchmark.BenchmarkInstance.update_objectives)
}
inline void BenchmarkInstance::_internal_add_update_objectives(double value) {
  update_objectives_.Add(value);
}
inline void BenchmarkInstance::add_update_objectives(double value) {
  _internal_add_update_objectives(value);
  // @@protoc_insertion_point(field_add:math_opt_benchmark.BenchmarkInstance.update_objectives)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
BenchmarkInstance::_internal_update_objectives() const {
  return update_objectives_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
BenchmarkInstance::update_objectives() const {
  // @@protoc_insertion_point(field_list:math_opt_benchmark.BenchmarkInstance.update_objectives)
  return _internal_update_objectives();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
BenchmarkInstance::_internal_mutable_update_objectives() {
  return &update_objectives_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
BenchmarkInstance::mutable_update_objectives() {
  // @@protoc_insertion_point(field_mutable_list:math_opt_benchmark.BenchmarkInstance.update_objectives)
  return _internal_mutable_update_objectives();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace math_opt_benchmark

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_math_5fopt_5fbenchmark_2fproto_2fmodel_2eproto
